---
stages:
  - lint
  - build
  - test
  - publish
# -----------------------------
# SHELL SCRIPTS (.sh) LINTING
# -----------------------------
shellcheck:
  image:
    name: koalaman/shellcheck-alpine
  stage: lint
  script: shellcheck -x $(find . -type f -name "*.sh")
  tags: [linux]
  rules:
    - exists:
       - '*.sh'
# -----------------------------
# YAML LINTING
# -----------------------------
yamllint:
  stage: lint
  image: cytopia/yamllint:latest
  script:
    - echo "Finding non-GitHub YAML files..."
    - YAML_FILES=$(find . -type f \( -name '*.yml' -o -name '*.yaml' \) ! -path './.github/workflows/*')
    - if [ -n "$YAML_FILES" ]; then
        echo "$YAML_FILES" | yamllint -s $YAML_FILES
      else
        echo "No relevant YAML files to lint.";
      fi  
  only:
    changes:
      - "**/*.yml"
      - "**/*.yaml"
  except:
    changes:
      - .github/workflows/*
# -----------------------------
# GITHUB ACTIONS YAML 
# -----------------------------
actionlint:
  stage: lint
  image: golang:1.21
  before_script:
    - go install github.com/rhysd/actionlint/cmd/actionlint@latest
    - export PATH="$PATH:$(go env GOPATH)/bin"
  script:
    - echo "Running actionlint on GitHub Actions workflow files..."
    - actionlint
  only:
    changes:
      - .github/workflows/*.yml

# -----------------------------
# C PROJECT
# -----------------------------
c_build:
  image: gcc:latest
  stage: build
  script:
    - make
  tags: [linux]
  rules:
    - exists:
        - 'Makefile'
c_test:
  image: gcc:latest
  stage: test
  script:
    - make test || echo "no tests defined"
  tags: [linux]
  rules:
    - exists:
        - 'Makefile'
# -----------------------------
# .NET (Console, Web, Aspire)
# -----------------------------
dotnet_build:
  image: mcr.microsoft.com/dotnet/sdk:8.0
  stage: build
  script:
    - dotnet restore
    - dotnet build --configuration Release
  tags: [linux]
  rules:
    - exists:
        - '*.csproj'
        - '*.sln'
dotnet_test:
  image: mcr.microsoft.com/dotnet/sdk:8.0
  stage: test
  script:
    - dotnet test --no-build
  tags: [linux]
  rules:
    - exists:
        - '*.csproj'
        - '*.sln'
dotnet_publish:
  image: mcr.microsoft.com/dotnet/sdk:8.0
  stage: publish
  script:
    - dotnet publish --configuration Release -o publish
  tags: [linux]
  rules:
    - exists:
        - '*.csproj'
        - '*.sln'
  artifacts:
    paths:
      - publish/
